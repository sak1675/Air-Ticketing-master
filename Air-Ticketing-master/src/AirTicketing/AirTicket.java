/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AirTicketing;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class AirTicket extends javax.swing.JFrame {

    //Declaring Variable to store userName obtained from SplashScreen.class
    String userName;
    LinkedList<String> seatlist = new LinkedList<String>();

    /**
     * Creates new form AirTicket
     */
    public AirTicket() {
        initComponents();
        adminJPanel.setVisible(false);
        ticketsJPanel.setVisible(false);
    }

    //Constructor for Username
    public AirTicket(String user) {
        //Takes the user from SplashScreen
        userName = user;
        initComponents();
        //visibility false
        adminJPanel.setVisible(false);
        ticketsJPanel.setVisible(false);
        //Setting the Welcome Text's first letter to UpperCase using user from SplashScreen
        greetingLbl.setText("Welcome " + Character.toUpperCase(userName.charAt(0)) + userName.substring(1));
        //Calls time method and displays current time
        Timer timer = new Timer(500, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                time();
            }
        });
        timer.start();
        /**
         *
         *
         * Boarding pass variables visibility set to false
         *
         */
        bpNamelbl.setVisible(false);
        bpFromlbl.setVisible(false);
        bpTolbl.setVisible(false);
        bpflightidlbl.setVisible(false);
        bpFlightdetaillbl.setVisible(false);
        bpAirlinelbl.setVisible(false);
        bpClasslbl.setVisible(false);
        bpdepdatelbl.setVisible(false);
        bptimeseatlbl.setVisible(false);
        bpseprator.setVisible(false);
        bpPricelbl.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderBtnGroup = new javax.swing.ButtonGroup();
        tripBtnGroup = new javax.swing.ButtonGroup();
        classBtnGroup = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        adminLblPnl = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        hiconlbl = new javax.swing.JLabel();
        exitPnl = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        eiconlbl = new javax.swing.JLabel();
        ticketsLabelPnl = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        ticonlbl = new javax.swing.JLabel();
        mainJPanel = new javax.swing.JPanel();
        ticketsJPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mainTbl = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        greetingLbl = new java.awt.Label();
        currentTimeLbl = new java.awt.Label();
        jPanel3 = new javax.swing.JPanel();
        namelbl = new javax.swing.JLabel();
        nameTxtField = new javax.swing.JTextField();
        agelbl = new javax.swing.JLabel();
        phoneTxtField = new javax.swing.JTextField();
        genderlbl = new javax.swing.JLabel();
        maleRadioBtn = new javax.swing.JRadioButton();
        femaleRadioBtn = new javax.swing.JRadioButton();
        contactlbl = new javax.swing.JLabel();
        phonePinTxtField = new javax.swing.JTextField();
        ageTxtField = new javax.swing.JTextField();
        depdatelbl = new javax.swing.JLabel();
        departureTxtField = new javax.swing.JTextField();
        fromlbl = new javax.swing.JLabel();
        fromComboBox = new javax.swing.JComboBox<>();
        tolbl = new javax.swing.JLabel();
        toComboBox = new javax.swing.JComboBox<>();
        seatlbl = new javax.swing.JLabel();
        seatTxtField = new javax.swing.JTextField();
        availableSeatBtn = new javax.swing.JButton();
        flightlbl = new javax.swing.JLabel();
        onewayRadioBtn = new javax.swing.JRadioButton();
        wholeTripRadioBtn = new javax.swing.JRadioButton();
        classlbl = new javax.swing.JLabel();
        firstClassRadioBtn = new javax.swing.JRadioButton();
        economyRadioBtn = new javax.swing.JRadioButton();
        airlinelbl = new javax.swing.JLabel();
        airlineComboBox = new javax.swing.JComboBox<>();
        infoBtn = new javax.swing.JButton();
        priceTxtField = new javax.swing.JTextField();
        pricelbl = new javax.swing.JLabel();
        bookBtn = new javax.swing.JButton();
        bpNamedsplbl = new javax.swing.JLabel();
        bpNamelbl = new javax.swing.JLabel();
        bpFromlbl = new javax.swing.JLabel();
        bpFrmdpylbl = new javax.swing.JLabel();
        bpTolbl = new javax.swing.JLabel();
        bpTodsplbl = new javax.swing.JLabel();
        bpFlightdetaillbl = new javax.swing.JLabel();
        bpflightidlbl = new javax.swing.JLabel();
        bpFligtiddsplbl = new javax.swing.JLabel();
        bpFlightdetaildsplbl = new javax.swing.JLabel();
        bpdepdatelbl = new javax.swing.JLabel();
        bpClasslbl = new javax.swing.JLabel();
        bpClassdsplbl = new javax.swing.JLabel();
        bpdepdatedsplbl = new javax.swing.JLabel();
        bpPricelbl = new javax.swing.JLabel();
        bpPricedsplbl = new javax.swing.JLabel();
        bpseprator = new javax.swing.JLabel();
        bpSeatdsplbl = new javax.swing.JLabel();
        bptimedsplbl = new javax.swing.JLabel();
        bptimeseatlbl = new javax.swing.JLabel();
        bpAirlinelbl = new javax.swing.JLabel();
        clearbtn = new javax.swing.JButton();
        ticketlbl = new javax.swing.JLabel();
        adminJPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        adminTable = new javax.swing.JTable();
        searchBtn1 = new javax.swing.JButton();
        searchTxtField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        yourSearchLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchtbl = new javax.swing.JTable();
        clearBtn1 = new javax.swing.JButton();
        searchcb = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openmi = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JPopupMenu.Separator();
        exitmi = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1272, 659));

        jPanel2.setBackground(new java.awt.Color(250, 0, 17));
        jPanel2.setLayout(null);

        adminLblPnl.setBackground(new java.awt.Color(252, 33, 48));
        adminLblPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminLblPnlMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Admin");

        hiconlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/baseline_home_black_18dp.png"))); // NOI18N

        javax.swing.GroupLayout adminLblPnlLayout = new javax.swing.GroupLayout(adminLblPnl);
        adminLblPnl.setLayout(adminLblPnlLayout);
        adminLblPnlLayout.setHorizontalGroup(
            adminLblPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLblPnlLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(hiconlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap(49, Short.MAX_VALUE))
        );
        adminLblPnlLayout.setVerticalGroup(
            adminLblPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminLblPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(adminLblPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(hiconlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        jPanel2.add(adminLblPnl);
        adminLblPnl.setBounds(0, 40, 130, 40);

        exitPnl.setBackground(new java.awt.Color(252, 33, 48));
        exitPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitPnlMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Exit");

        eiconlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/open-exit-door.png"))); // NOI18N

        javax.swing.GroupLayout exitPnlLayout = new javax.swing.GroupLayout(exitPnl);
        exitPnl.setLayout(exitPnlLayout);
        exitPnlLayout.setHorizontalGroup(
            exitPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exitPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(eiconlbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addGap(17, 17, 17))
        );
        exitPnlLayout.setVerticalGroup(
            exitPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exitPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(exitPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(exitPnlLayout.createSequentialGroup()
                        .addGap(0, 4, Short.MAX_VALUE)
                        .addComponent(eiconlbl)))
                .addContainerGap())
        );

        jPanel2.add(exitPnl);
        exitPnl.setBounds(0, 560, 130, 40);

        ticketsLabelPnl.setBackground(new java.awt.Color(247, 84, 95));
        ticketsLabelPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ticketsLabelPnlMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tickets");

        ticonlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/airplane-flight-ticket.png"))); // NOI18N

        javax.swing.GroupLayout ticketsLabelPnlLayout = new javax.swing.GroupLayout(ticketsLabelPnl);
        ticketsLabelPnl.setLayout(ticketsLabelPnlLayout);
        ticketsLabelPnlLayout.setHorizontalGroup(
            ticketsLabelPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ticketsLabelPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ticonlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jLabel3)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        ticketsLabelPnlLayout.setVerticalGroup(
            ticketsLabelPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ticketsLabelPnlLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ticketsLabelPnlLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ticonlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.add(ticketsLabelPnl);
        ticketsLabelPnl.setBounds(0, 80, 130, 40);

        mainJPanel.setBackground(new java.awt.Color(153, 153, 255));
        mainJPanel.setLayout(new java.awt.CardLayout());

        ticketsJPanel.setBackground(new java.awt.Color(153, 153, 255));
        ticketsJPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true));

        mainTbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51)));
        mainTbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mainTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Contact", "Flight Detail", "From - To", "Departure Date", "Airline", "Class", "Time", "Flight Id", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(mainTbl);
        if (mainTbl.getColumnModel().getColumnCount() > 0) {
            mainTbl.getColumnModel().getColumn(0).setResizable(false);
            mainTbl.getColumnModel().getColumn(0).setPreferredWidth(65);
            mainTbl.getColumnModel().getColumn(1).setResizable(false);
            mainTbl.getColumnModel().getColumn(2).setResizable(false);
            mainTbl.getColumnModel().getColumn(2).setPreferredWidth(65);
            mainTbl.getColumnModel().getColumn(3).setResizable(false);
            mainTbl.getColumnModel().getColumn(4).setPreferredWidth(80);
            mainTbl.getColumnModel().getColumn(5).setResizable(false);
            mainTbl.getColumnModel().getColumn(6).setResizable(false);
            mainTbl.getColumnModel().getColumn(6).setPreferredWidth(60);
            mainTbl.getColumnModel().getColumn(7).setResizable(false);
            mainTbl.getColumnModel().getColumn(7).setPreferredWidth(60);
            mainTbl.getColumnModel().getColumn(8).setResizable(false);
            mainTbl.getColumnModel().getColumn(8).setPreferredWidth(60);
            mainTbl.getColumnModel().getColumn(9).setResizable(false);
        }

        jPanel5.setBackground(new java.awt.Color(51, 51, 255));

        greetingLbl.setAlignment(java.awt.Label.CENTER);
        greetingLbl.setFont(new java.awt.Font("Tempus Sans ITC", 0, 24)); // NOI18N
        greetingLbl.setForeground(new java.awt.Color(255, 255, 255));
        greetingLbl.setText("Welcome");

        currentTimeLbl.setAlignment(java.awt.Label.CENTER);
        currentTimeLbl.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        currentTimeLbl.setForeground(new java.awt.Color(255, 255, 255));
        currentTimeLbl.setText("Time");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addComponent(greetingLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(currentTimeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(greetingLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(currentTimeLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setLayout(null);

        namelbl.setText("Full Name");
        jPanel3.add(namelbl);
        namelbl.setBounds(35, 100, 70, 20);

        nameTxtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameTxtFieldKeyTyped(evt);
            }
        });
        jPanel3.add(nameTxtField);
        nameTxtField.setBounds(135, 100, 190, 20);

        agelbl.setText("Age");
        jPanel3.add(agelbl);
        agelbl.setBounds(35, 140, 60, 20);

        phoneTxtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phoneTxtFieldKeyTyped(evt);
            }
        });
        jPanel3.add(phoneTxtField);
        phoneTxtField.setBounds(185, 220, 140, 20);

        genderlbl.setText("Gender");
        jPanel3.add(genderlbl);
        genderlbl.setBounds(35, 180, 80, 20);

        genderBtnGroup.add(maleRadioBtn);
        maleRadioBtn.setText("Male");
        maleRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleRadioBtnActionPerformed(evt);
            }
        });
        jPanel3.add(maleRadioBtn);
        maleRadioBtn.setBounds(135, 180, 60, 20);

        genderBtnGroup.add(femaleRadioBtn);
        femaleRadioBtn.setText("Female");
        jPanel3.add(femaleRadioBtn);
        femaleRadioBtn.setBounds(210, 180, 70, 20);

        contactlbl.setText("Contact no");
        jPanel3.add(contactlbl);
        contactlbl.setBounds(35, 220, 70, 20);
        jPanel3.add(phonePinTxtField);
        phonePinTxtField.setBounds(135, 220, 40, 20);

        ageTxtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ageTxtFieldKeyTyped(evt);
            }
        });
        jPanel3.add(ageTxtField);
        ageTxtField.setBounds(135, 140, 190, 20);

        depdatelbl.setText("Departure Date");
        jPanel3.add(depdatelbl);
        depdatelbl.setBounds(35, 260, 90, 20);

        departureTxtField.setText("DD/MM/YYYY");
        jPanel3.add(departureTxtField);
        departureTxtField.setBounds(135, 260, 190, 20);

        fromlbl.setText("From");
        jPanel3.add(fromlbl);
        fromlbl.setBounds(35, 300, 50, 20);

        fromComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Nepal", "China", "India", "Spain", "Australia" }));
        jPanel3.add(fromComboBox);
        fromComboBox.setBounds(135, 300, 68, 20);

        tolbl.setText("To");
        jPanel3.add(tolbl);
        tolbl.setBounds(210, 300, 20, 20);

        toComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Nepal", "China", "India", "Spain", "Australia" }));
        jPanel3.add(toComboBox);
        toComboBox.setBounds(240, 300, 68, 20);

        seatlbl.setText("Seat");
        jPanel3.add(seatlbl);
        seatlbl.setBounds(35, 340, 40, 20);
        jPanel3.add(seatTxtField);
        seatTxtField.setBounds(135, 340, 180, 20);

        availableSeatBtn.setText("Check available seat");
        availableSeatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availableSeatBtnActionPerformed(evt);
            }
        });
        jPanel3.add(availableSeatBtn);
        availableSeatBtn.setBounds(90, 380, 180, 23);

        flightlbl.setText("Flight detail");
        jPanel3.add(flightlbl);
        flightlbl.setBounds(400, 180, 70, 14);

        tripBtnGroup.add(onewayRadioBtn);
        onewayRadioBtn.setText("One way");
        jPanel3.add(onewayRadioBtn);
        onewayRadioBtn.setBounds(500, 180, 90, 23);

        tripBtnGroup.add(wholeTripRadioBtn);
        wholeTripRadioBtn.setText("Whole Trip");
        jPanel3.add(wholeTripRadioBtn);
        wholeTripRadioBtn.setBounds(590, 180, 90, 23);

        classlbl.setText("Class");
        jPanel3.add(classlbl);
        classlbl.setBounds(400, 220, 50, 14);

        classBtnGroup.add(firstClassRadioBtn);
        firstClassRadioBtn.setText("First Class");
        jPanel3.add(firstClassRadioBtn);
        firstClassRadioBtn.setBounds(500, 220, 90, 23);

        classBtnGroup.add(economyRadioBtn);
        economyRadioBtn.setText("Economy");
        jPanel3.add(economyRadioBtn);
        economyRadioBtn.setBounds(590, 220, 100, 23);

        airlinelbl.setText("Airlines");
        jPanel3.add(airlinelbl);
        airlinelbl.setBounds(400, 100, 60, 14);

        airlineComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Buddha Airs", "Qatar Airways", "Turkish Airlines", "Nepal Airlines", "Himalaya Airlines" }));
        jPanel3.add(airlineComboBox);
        airlineComboBox.setBounds(500, 100, 120, 20);

        infoBtn.setText("Get Informaton");
        infoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoBtnActionPerformed(evt);
            }
        });
        jPanel3.add(infoBtn);
        infoBtn.setBounds(500, 140, 120, 23);

        priceTxtField.setEditable(false);
        priceTxtField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        priceTxtField.setText("Price will be displayed here.");
        jPanel3.add(priceTxtField);
        priceTxtField.setBounds(500, 260, 160, 30);

        pricelbl.setText("Price");
        jPanel3.add(pricelbl);
        pricelbl.setBounds(400, 260, 40, 14);

        bookBtn.setText("Book");
        bookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookBtnActionPerformed(evt);
            }
        });
        jPanel3.add(bookBtn);
        bookBtn.setBounds(500, 310, 70, 23);

        bpNamedsplbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel3.add(bpNamedsplbl);
        bpNamedsplbl.setBounds(820, 110, 210, 30);

        bpNamelbl.setText("Name");
        jPanel3.add(bpNamelbl);
        bpNamelbl.setBounds(820, 90, 40, 14);

        bpFromlbl.setText("From");
        jPanel3.add(bpFromlbl);
        bpFromlbl.setBounds(820, 150, 40, 14);

        bpFrmdpylbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel3.add(bpFrmdpylbl);
        bpFrmdpylbl.setBounds(820, 170, 100, 30);

        bpTolbl.setText("To");
        jPanel3.add(bpTolbl);
        bpTolbl.setBounds(960, 150, 20, 14);

        bpTodsplbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel3.add(bpTodsplbl);
        bpTodsplbl.setBounds(960, 170, 100, 30);

        bpFlightdetaillbl.setText("Flight Detail");
        jPanel3.add(bpFlightdetaillbl);
        bpFlightdetaillbl.setBounds(960, 210, 80, 14);

        bpflightidlbl.setText("Flight Id");
        jPanel3.add(bpflightidlbl);
        bpflightidlbl.setBounds(820, 210, 60, 14);

        bpFligtiddsplbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel3.add(bpFligtiddsplbl);
        bpFligtiddsplbl.setBounds(820, 230, 100, 30);

        bpFlightdetaildsplbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel3.add(bpFlightdetaildsplbl);
        bpFlightdetaildsplbl.setBounds(960, 230, 110, 30);

        bpdepdatelbl.setText("Departure Date");
        jPanel3.add(bpdepdatelbl);
        bpdepdatelbl.setBounds(960, 270, 90, 14);

        bpClasslbl.setText("Class");
        jPanel3.add(bpClasslbl);
        bpClasslbl.setBounds(820, 270, 40, 14);

        bpClassdsplbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel3.add(bpClassdsplbl);
        bpClassdsplbl.setBounds(820, 290, 110, 30);

        bpdepdatedsplbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel3.add(bpdepdatedsplbl);
        bpdepdatedsplbl.setBounds(960, 290, 130, 30);

        bpPricelbl.setText("Price");
        jPanel3.add(bpPricelbl);
        bpPricelbl.setBounds(990, 330, 40, 14);

        bpPricedsplbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel3.add(bpPricedsplbl);
        bpPricedsplbl.setBounds(990, 350, 70, 20);

        bpseprator.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bpseprator.setText("/");
        jPanel3.add(bpseprator);
        bpseprator.setBounds(920, 350, 10, 22);

        bpSeatdsplbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel3.add(bpSeatdsplbl);
        bpSeatdsplbl.setBounds(930, 350, 40, 30);

        bptimedsplbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel3.add(bptimedsplbl);
        bptimedsplbl.setBounds(820, 350, 100, 30);

        bptimeseatlbl.setText("Time / Seat");
        jPanel3.add(bptimeseatlbl);
        bptimeseatlbl.setBounds(820, 330, 70, 14);

        bpAirlinelbl.setFont(new java.awt.Font("Nirmala UI", 1, 20)); // NOI18N
        bpAirlinelbl.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.add(bpAirlinelbl);
        bpAirlinelbl.setBounds(890, 10, 200, 30);

        clearbtn.setText("Clear");
        clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbtnActionPerformed(evt);
            }
        });
        jPanel3.add(clearbtn);
        clearbtn.setBounds(590, 310, 70, 23);

        ticketlbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/airticket.jpg"))); // NOI18N
        ticketlbl.setLabelFor(ticketlbl);
        jPanel3.add(ticketlbl);
        ticketlbl.setBounds(0, 0, 1110, 410);

        javax.swing.GroupLayout ticketsJPanelLayout = new javax.swing.GroupLayout(ticketsJPanel);
        ticketsJPanel.setLayout(ticketsJPanelLayout);
        ticketsJPanelLayout.setHorizontalGroup(
            ticketsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ticketsJPanelLayout.createSequentialGroup()
                .addGroup(ticketsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ticketsJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        ticketsJPanelLayout.setVerticalGroup(
            ticketsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ticketsJPanelLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainJPanel.add(ticketsJPanel, "card2");

        adminJPanel.setBackground(new java.awt.Color(51, 51, 255));
        adminJPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true));

        adminTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 2));
        adminTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        adminTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Abinav Ghimire", "+9779841215132", "One Way", "Nepal-China", "10/10/2000", "Buddha Airs", "Economy", "10:00 A.M", "NC10BA", "1600"},
                {"Satkar Kadel", "+9779841215131", "One Way", "Nepal-China", "10/11/2000", "Qatar Airways", "Economy", "10:00 A.M", "NC10BA", "1500"},
                {"Sashis Mainali", "+9779841214232", "Whole Trip", "China-India", "09/11/2000", "Turkish Airlines", "First Class", "11:00 A.M", "CI11TA", "2000"},
                {"Ritick Sharma", "+9779841221421", "One Way", "Nepal-China", "01/01/1988", "Nepal Airlines", "Economy", "01:00 P.M", "NC01NA", "1600"},
                {"Halal Maharjan", "+9779841221422", "One Way", "China-Nepal", "02/12/1999", "Himalaya Airlines", "First Class", "03:30 A.M", "CN03HA", "2000"}
            },
            new String [] {
                "Name", "Contact", "Flight Detail", "From - To", "Departure Date", "Airline", "Class", "Time", "Flight Id", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        adminTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(adminTable);

        searchBtn1.setBackground(new java.awt.Color(0, 0, 102));
        searchBtn1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        searchBtn1.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn1.setText("Search");
        searchBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtn1ActionPerformed(evt);
            }
        });

        searchTxtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchTxtFieldKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("ADMIN");

        jPanel1.setBackground(new java.awt.Color(209, 6, 20));

        yourSearchLbl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        yourSearchLbl.setForeground(new java.awt.Color(255, 255, 255));
        yourSearchLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        yourSearchLbl.setText("Your Search");

        searchtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Contact", "Flight Detail", "From - To", "Departure Date", "Airline", "Class", "Time", "Flight Id", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchtbl.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(searchtbl);

        clearBtn1.setBackground(new java.awt.Color(0, 0, 102));
        clearBtn1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        clearBtn1.setForeground(new java.awt.Color(240, 240, 240));
        clearBtn1.setText("Clear");
        clearBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(523, 523, 523)
                .addComponent(yourSearchLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(478, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clearBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(yourSearchLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clearBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        searchcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Buddha Airs", "Qatar Airways", "Turkish Airlines", "Nepal Airlines", "Himalaya Airlines" }));
        searchcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchcbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminJPanelLayout = new javax.swing.GroupLayout(adminJPanel);
        adminJPanel.setLayout(adminJPanelLayout);
        adminJPanelLayout.setHorizontalGroup(
            adminJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(adminJPanelLayout.createSequentialGroup()
                .addGroup(adminJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(searchTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchBtn1))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        adminJPanelLayout.setVerticalGroup(
            adminJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminJPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(adminJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn1)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        mainJPanel.add(adminJPanel, "card3");

        fileMenu.setText("File");

        openmi.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openmi.setText("Open");
        openmi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openmiActionPerformed(evt);
            }
        });
        fileMenu.add(openmi);
        fileMenu.add(jSeparator11);

        exitmi.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        exitmi.setText("Exit");
        exitmi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitmiActionPerformed(evt);
            }
        });
        fileMenu.add(exitmi);

        jMenuBar1.add(fileMenu);

        helpMenu.setText("Help");
        helpMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                helpMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //Action Event for Exit in Menu Option
    private void exitmiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitmiActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitmiActionPerformed

    private void maleRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleRadioBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleRadioBtnActionPerformed

    private void bookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookBtnActionPerformed
        // TODO add your handling code here:

        //Creating Variables to store texts in our table
        String name, fromTo, departureDate, airline, from, contact, to;
        String flightId = "";
        String flightDetail = "";
        String flightClass = "";
        String time = "";
        //Boolean to check duplicate values
        Boolean duplicate = false;
        int price = 0;
        int rowCount = mainTbl.getRowCount();
        int colCount = mainTbl.getColumnCount();

        /**
         *
         *
         * If else to check empty text fields and radio buttons
         *
         */
        if (nameTxtField.getText().equals("") || ageTxtField.getText().equals("") || phonePinTxtField.getText().equals("") || phoneTxtField.getText().equals("")
                || departureTxtField.getText().equals("") || seatTxtField.getText().equals("") || genderBtnGroup.getSelection() == null
                || tripBtnGroup.getSelection() == null || classBtnGroup.getSelection() == null) {
            JOptionPane.showMessageDialog(rootPane, "Empty Fields or Radio Buttons", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (phoneTxtField.getText().length() != 10) {//Checks Length of Phone Number 
            JOptionPane.showMessageDialog(rootPane, "Phone number must be 10 digits", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (fromComboBox.getSelectedIndex() == 0 || toComboBox.getSelectedIndex() == 0) {//Checks selection of combo boxes
            JOptionPane.showMessageDialog(rootPane, "From OR To not Selected", "Error", JOptionPane.ERROR_MESSAGE);
        } else {

            /**
             *
             * If the validation checks are cleared, getting the texts from
             * textFields and storing them in the declared variables
             *
             */
            name = nameTxtField.getText();

            /**
             *
             *
             * String to concatenate phone number and phone pin
             *
             */
            String phoneConcat = phonePinTxtField.getText() + phoneTxtField.getText();
            contact = String.valueOf("+" + phoneConcat);

            /**
             *
             *
             * Code to get price of selected flight type
             *
             */
            if (onewayRadioBtn.isSelected()) {
                flightDetail = "One Way";
                price = price + 400;
            } else if (wholeTripRadioBtn.isSelected()) {
                flightDetail = "Whole Trip";
                price = price + 800;
            }

            /**
             *
             *
             * Code to get departure date and flightId
             *
             */
            departureDate = departureTxtField.getText();
            String id = departureDate.substring(0, departureDate.length() - 8);

            /**
             *
             * Setting values of from and to comboBox to declared strings
             *
             */
            from = (String) fromComboBox.getSelectedItem();
            to = (String) toComboBox.getSelectedItem();
            fromTo = from + "-" + to;

            /**
             *
             *
             * Setting the Price based on User's Destination
             *
             */
            if ((from == "Nepal" && to == "India") || (from == "India" && to == "Nepal")) {
                price = price + 500;
                flightId = "NI" + id;
            } else if ((from == "Nepal" && to == "China") || (from == "China" && to == "Nepal")) {
                price = price + 600;
                flightId = "NC" + id;
            } else if ((from == "Nepal" && to == "Spain") || (from == "Spain" && to == "Nepal")) {
                price = price + 800;
                flightId = "NS" + id;
            } else if ((from == "Nepal" && to == "Australia") || (from == "Australia" && to == "Nepal")) {
                price = price + 400;
                flightId = "NA" + id;
            } else if ((from == "India" && to == "China") || (from == "China" && to == "India")) {
                price = price + 300;
                flightId = "IC" + id;
            } else if ((from == "India" && to == "Spain") || (from == "Spain" && to == "India")) {
                price = price + 900;
                flightId = "IS" + id;
            } else if ((from == "India" && to == "Australia") || (from == "Australia" && to == "India")) {
                price = price + 500;
                flightId = "IA" + id;
            }
            if ((from == "China" && to == "Spain") || (from == "Spain" && to == "China")) {
                price = price + 700;
                flightId = "CS" + id;
            } else if ((from == "China" && to == "Australia" || from == "Australia" && to == "China")) {
                price = price + 500;
                flightId = "CA" + id;
            } else if ((from == "Spain" && to == "Australia" || from == "Australia" && to == "Spain")) {
                price = price + 1000;
                flightId = "SA" + id;
            }

            /**
             *
             * Code to get price of selected airline
             *
             */
            airline = (String) airlineComboBox.getSelectedItem();

            if (airline == "Buddha Airs") {
                price = price + 200;
                time = "10:00 A.M";
                flightId = flightId + "BA";
            } else if (airline == "Qatar Airways") {
                price = price + 300;
                time = "12:30 P.M";
                flightId = flightId + "QA";
            } else if (airline == "Turkish Airlines") {
                price = price + 400;
                time = "03:00 P.M";
                flightId = flightId + "TA";
            } else if (airline == "Nepal Airlines") {
                price = price + 200;
                time = "05:30 P.M";
                flightId = flightId + "NA";
            } else if (airline == "Himalaya Airlines") {
                price = price + 400;
                time = "08:30 P.M";
                flightId = flightId + "HA";
            }
            /**
             *
             *
             * code to get selected flight class
             *
             */
            if (firstClassRadioBtn.isSelected()) {
                flightClass = "First Class ";
                price = price + 800;
            } else if (economyRadioBtn.isSelected()) {
                flightClass = "Economy";
                price = price + 400;
            }

            /**
             *
             *
             * Setting the final total price
             *
             */
            int total = price;
            priceTxtField.setText(Integer.toString(total));

            /**
             *
             *
             * Checking if the user inserts duplicate data
             *
             */
            try {
                for (int i = 0; i < rowCount; i++) {
                    if ((mainTbl.getValueAt(i, 0).equals(name)) && (mainTbl.getValueAt(i, 1).equals(contact)) && (mainTbl.getValueAt(i, 2).equals(flightDetail))
                            && (mainTbl.getValueAt(i, 3).equals(fromTo)) && (mainTbl.getValueAt(i, 4).equals(departureDate)) && (mainTbl.getValueAt(i, 5).equals(airline))
                            && (mainTbl.getValueAt(i, 6).equals(flightClass)) && (mainTbl.getValueAt(i, 7).equals(time)) && (mainTbl.getValueAt(i, 8).equals(flightId))) {

                        /**
                         *
                         *
                         * Sets the Boolean to true if there is any duplicate
                         * data. The whole data entered should be same!
                         */
                        duplicate = true;
                        JOptionPane.showMessageDialog(rootPane, "Ticket Already Booked", "Message", JOptionPane.INFORMATION_MESSAGE);

                    }
                }

                /**
                 *
                 *
                 * Gives Error Message if same destination is selected
                 *
                 */
                if (from == to) {
                    JOptionPane.showMessageDialog(rootPane, "Same destination please select another", "Error", JOptionPane.ERROR_MESSAGE);
                    fromComboBox.setSelectedIndex(0);
                    toComboBox.setSelectedIndex(0);
                } else if (!duplicate) { //Adds to Table if duplicate Boolean is false
                    String data[] = {name, contact, flightDetail, fromTo, departureDate, airline, flightClass, time, flightId, Integer.toString(total)};
                    //Getting the table's total number of columns and rows  
                    DefaultTableModel model = (DefaultTableModel) mainTbl.getModel();
                    DefaultTableModel adminmodel = (DefaultTableModel) adminTable.getModel();
                    adminmodel.addRow(data);
                    model.addRow(new Object[1]);
                    boolean empty = false;
                    int nextRow = 0;
                    String s;
                    do {
                        s = (String) mainTbl.getValueAt(nextRow, 0);
                        if (s != null && s.length() != 0) {
                            nextRow++;
                        } else {
                            empty = true;
                        }
                    } while (!empty);

                    for (int i = 0; i < colCount; i++) {
                        mainTbl.setValueAt(data[i], nextRow, i);
                    }

                    
                    /**
                     *
                     *
                     * Creating a instance of CSVCodes Class and Adding the data
                     * to the CSV file
                     *
                     */
                    CSVCodes csvCodes = new CSVCodes();
                    csvCodes.saveTicket(name, contact, flightDetail, fromTo, departureDate, airline, flightClass, time, flightId, total);

                    /**
                     *
                     *
                     * Setting boarding pass labels visible after booking
                     *
                     */
                    String seat = seatTxtField.getText();
                    seatlist.add(seat);

                    bpNamelbl.setVisible(true);
                    bpNamedsplbl.setText(name);

                    bpAirlinelbl.setVisible(true);
                    bpAirlinelbl.setText(airline);

                    bpFromlbl.setVisible(true);
                    bpFrmdpylbl.setText(from);

                    bpTolbl.setVisible(true);
                    bpTodsplbl.setText(to);

                    bpflightidlbl.setVisible(true);
                    bpFligtiddsplbl.setText(flightId);

                    bpFlightdetaillbl.setVisible(true);
                    bpFlightdetaildsplbl.setText(flightDetail);

                    bpClasslbl.setVisible(true);
                    bpClassdsplbl.setText(flightClass);

                    bpdepdatelbl.setVisible(true);
                    bpdepdatedsplbl.setText(departureDate);

                    bptimeseatlbl.setVisible(true);
                    bptimedsplbl.setText(time);

                    bpseprator.setVisible(true);
                    bpSeatdsplbl.setText(seat);

                    bpPricelbl.setVisible(true);
                    bpPricedsplbl.setText(Integer.toString(total));

                    JOptionPane.showMessageDialog(rootPane, "Your Bill Has Been Printed", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_bookBtnActionPerformed

    /*Consumes any letters type in age field
       And allows only numerals 
     */
    private void ageTxtFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ageTxtFieldKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_ageTxtFieldKeyTyped

    private void phoneTxtFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneTxtFieldKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_phoneTxtFieldKeyTyped


    /**
     *
     *
     * Methods to change colors of navigation bar
     *
     */
    public void setColor(JPanel panel) {
        panel.setBackground(new Color(247, 84, 95));
    }

    public void resetColor(JPanel panel) {
        panel.setBackground(new Color(252, 33, 48));
    }

    private void exitPnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitPnlMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitPnlMouseClicked

    private void adminLblPnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminLblPnlMouseClicked
        // TODO add your handling code here:

        //Checks if the selected panel is adminPanel or Not
        if (!adminJPanel.isVisible()) {
            /**
             *
             * Creating a new password field for JOption Pane And Checking if
             * the password entered is correct for admin tab
             *
             */
            JPasswordField passwordField = new JPasswordField();
            int clickedOk = JOptionPane.showConfirmDialog(rootPane, passwordField, "Enter Password", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
            /**
             *
             * When User clicks OK, password should match as 'admin' Sets
             * Tickets JPanel Visibility to false and display Admin JPanel if
             * the password matches
             *
             */
            if (clickedOk == JOptionPane.OK_OPTION) {
                if (passwordField.getText().equalsIgnoreCase("admin")) {
                    ticketsJPanel.setVisible(false);
                    mainJPanel.removeAll();
                    mainJPanel.revalidate();
                    mainJPanel.repaint();
                    mainJPanel.add(adminJPanel);
                    mainJPanel.revalidate();
                    mainJPanel.repaint();
                    setColor(adminLblPnl);
                    resetColor(ticketsLabelPnl);
                    resetColor(exitPnl);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Only admin knows the password", "Wrong Password", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            System.out.println("Admin Visible");
        }


    }//GEN-LAST:event_adminLblPnlMouseClicked

    private void ticketsLabelPnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ticketsLabelPnlMouseClicked
        // TODO add your handling code here:
        if (!ticketsJPanel.isVisible()) {
            adminJPanel.setVisible(false);
            mainJPanel.removeAll();
            mainJPanel.revalidate();
            mainJPanel.repaint();
            mainJPanel.add(ticketsJPanel);
            mainJPanel.revalidate();
            mainJPanel.repaint();
            setColor(ticketsLabelPnl);
            resetColor(adminLblPnl);
            resetColor(exitPnl);
        } else {
            System.out.println("Already Ticket");
        }
    }//GEN-LAST:event_ticketsLabelPnlMouseClicked

    //Method for Open Menu Item
    //Opens the required CSV file
    private void openmiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openmiActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int i = fileChooser.showOpenDialog(AirTicket.this);
        //If Open button is Clicked
        if (i == JFileChooser.APPROVE_OPTION) {
            try {
                //readCSV method from CSVCodes Class to choose file and populate JTable
                CSVCodes.readCSV(fileChooser.getSelectedFile(), adminTable);
            } catch (Exception exp) {
                exp.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, "File not CSV Format", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_openmiActionPerformed

    private void helpMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_helpMenuMouseClicked
        // TODO add your handling code here:
        try {
            File myFile = new File("src/resources/HelpPDF.pdf");
            Desktop.getDesktop().open(myFile);
        } catch (Exception exp) {
            exp.printStackTrace();
        }

    }//GEN-LAST:event_helpMenuMouseClicked

    private void infoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoBtnActionPerformed
        // TODO add your handling code here:
        try {
            File myFile = new File("src/resources/getInformation.pdf");
            Desktop.getDesktop().open(myFile);
        } catch (Exception exp) {
            exp.printStackTrace();
        }
    }//GEN-LAST:event_infoBtnActionPerformed

    /**
     *
     *
     * Method for Search Button in Admin Panel
     *
     */
    private void searchBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtn1ActionPerformed
        // TODO add your handling code here:
        try {
            //Stores input of Search Text Field
            int searchValue = Integer.parseInt(searchTxtField.getText());

            /**
             *
             * Creating a new Linked List And, adding all prices from admin
             * JTable to the Linked List
             *
             */
            LinkedList<Integer> newArray = new LinkedList<Integer>();
            for (int j = 0; j < adminTable.getRowCount(); j++) {
                newArray.add(Integer.parseInt((String) adminTable.getValueAt(j, 9)));
            }
            /**
             *
             * Creating a new instance of Sort Class And Sorting out our Linked
             * List
             *
             */

            Sort sortClass = new Sort();
            sortClass.sort(newArray);

            /**
             *
             * Using Binary Search Method from Binary Search Class on our sorted
             * Linked List
             *
             */
            int low = 0;
            int high = newArray.size() - 1;
            BinarySearch binarySearchClass = new BinarySearch();
            int val = binarySearchClass.binarySearch(newArray, low, high, searchValue);
            if (val != -1) {
                for (int i = 0; i < adminTable.getRowCount(); i++) {
                    if (Integer.parseInt((String) adminTable.getValueAt(i, 9)) == searchValue) {
                        JOptionPane.showMessageDialog(rootPane, "Name: " + adminTable.getValueAt(i, 0) + "\n Flight Detail: " + adminTable.getValueAt(i, 2) + "\n Airlines: " + adminTable.getValueAt(i, 5) + "\n Price: " + adminTable.getValueAt(i, 9), "Search", JOptionPane.PLAIN_MESSAGE);
                        String[] data = {(String) adminTable.getValueAt(i, 0), (String) adminTable.getValueAt(i, 1), (String) adminTable.getValueAt(i, 2), (String) adminTable.getValueAt(i, 3), (String) adminTable.getValueAt(i, 4), (String) adminTable.getValueAt(i, 5), (String) adminTable.getValueAt(i, 6), (String) adminTable.getValueAt(i, 7), (String) adminTable.getValueAt(i, 8), (String) adminTable.getValueAt(i, 9)};
                        DefaultTableModel model = (DefaultTableModel) searchtbl.getModel();
                        model.addRow(data);
                        break;
                    }
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "No such Data Found With the given Price", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception exp) {
            JOptionPane.showMessageDialog(rootPane, "Input Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchBtn1ActionPerformed

    /**
     *
     *
     * Method to display data from admin table when searched from combo box And,
     * Display the selected data to search table
     *
     * @param evt
     */
    private void searchcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchcbActionPerformed
        // TODO add your handling code here:
        try {
            String toSearch = (String) searchcb.getSelectedItem();
            String namecount = "";
            int row = adminTable.getRowCount();
            int counter = 0;
            LinkedList<Search> dataList = new LinkedList();
            for (int i = 0; i < row; i++) {
                String Airline = (String) adminTable.getValueAt(i, 5);
                if (toSearch.equals(Airline)) {
                    String name = (String) adminTable.getValueAt(i, 0);
                    String contact = (String) adminTable.getValueAt(i, 1);
                    String flightdetail = (String) adminTable.getValueAt(i, 2);
                    String fromTo = (String) adminTable.getValueAt(i, 3);
                    String departuredate = (String) adminTable.getValueAt(i, 4);
                    String Class = (String) adminTable.getValueAt(i, 6);
                    String time = (String) adminTable.getValueAt(i, 7);
                    String Flightid = (String) adminTable.getValueAt(i, 8);
                    String price = (String) adminTable.getValueAt(i, 9);
                    namecount = namecount + "\n" + name;
                    counter ++;
                

                    String data[] = {name, contact, flightdetail, fromTo, departuredate, Airline, Class, time, Flightid, price};
                    DefaultTableModel model = (DefaultTableModel) searchtbl.getModel();
                    model.addRow(data);
                    Search datas = createItem(data);
                    //adding data in dataList
                    dataList.add(datas);
                } 
                    
                 
                
            }
            for (Search m : dataList) {
                    JOptionPane.showMessageDialog(rootPane, counter +" data has found for Airline: " + m.getAirline() +"\n"+" which are" + namecount);
                    break;
                }
          

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Not Found", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_searchcbActionPerformed
   /**
     * 
     * 
     * Method to store item in search 
     *
     */
    private static Search createItem(String metadata []) {
           String name = metadata[0];
           String contact = metadata[1];
           String flightdetail = metadata[2];
           String fromTo = metadata[3];
           String departuredate = metadata[4];
           String Airline = metadata[5];
           String Class = metadata[6];
           String time = metadata[7];
           String Flightid = metadata[8];
           String  price = metadata[9];

            // create and return item of this metadata
            return new Search(name, contact, flightdetail, fromTo, departuredate, Airline, Class, time, Flightid, price);
        }
    
    /**
     * 
     * 
     * Method to Check for digit in Name Text Field
     *
     */
    private void nameTxtFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTxtFieldKeyTyped
        // TODO add your handling code here:
         if (Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_nameTxtFieldKeyTyped

    private void searchTxtFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTxtFieldKeyTyped
        // TODO add your handling code here:
        //Checking for letter in search text field
         if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_searchTxtFieldKeyTyped

    private void clearBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtn1ActionPerformed
        // TODO add your handling code here:
       
        int rowCount = searchtbl.getRowCount();
        int colCount = searchtbl.getColumnCount();
          for(int j=0; j<rowCount;j++) {
               for(int i=0; i<colCount;i++) {
                    searchtbl.setValueAt(null, j, i);   
            }                    
        }
        for(int i=0;i<rowCount;i++){
            DefaultTableModel model=(DefaultTableModel)searchtbl.getModel();                    
            model.removeRow(0);   
        }  
    }//GEN-LAST:event_clearBtn1ActionPerformed

    private void clearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbtnActionPerformed
        // TODO add your handling code here:
        nameTxtField.setText("");
        ageTxtField.setText("");
        phonePinTxtField.setText("");
        phoneTxtField.setText("");
        departureTxtField.setText("DD/MM/YYYY");
        seatTxtField.setText("");
        priceTxtField.setText("Price will be displayed here.");
        genderBtnGroup.clearSelection();
        tripBtnGroup.clearSelection();
        classBtnGroup.clearSelection();
        airlineComboBox.setSelectedIndex(0);
        fromComboBox.setSelectedIndex(0);
        toComboBox.setSelectedIndex(0);
        //boarding pass
        bpNamelbl.setVisible(false);
        bpFromlbl.setVisible(false);
        bpTolbl.setVisible(false);
        bpflightidlbl.setVisible(false);
        bpFlightdetaillbl.setVisible(false);
        bpAirlinelbl.setVisible(false);
        bpClasslbl.setVisible(false);
        bpdepdatelbl.setVisible(false);
        bptimeseatlbl.setVisible(false);
        bpseprator.setVisible(false);
        bpPricelbl.setVisible(false);
        bpNamedsplbl.setText("");
        bpAirlinelbl.setText("");
        bpFrmdpylbl.setText("");
        bpTodsplbl.setText("");
        bpFligtiddsplbl.setText("");
        bpFlightdetaildsplbl.setText("");
        bpClassdsplbl.setText("");
        bpdepdatedsplbl.setText("");
        bptimedsplbl.setText("");
        bpSeatdsplbl.setText("");
        bpPricedsplbl.setText("");
        // table
        int rowCount = mainTbl.getRowCount();
        int colCount = mainTbl.getColumnCount();
        for(int j=0; j<rowCount;j++) {
               for(int i=0; i<colCount;i++) {
                    mainTbl.setValueAt(null, j, i);   
            }                    
        }
        for(int i=0;i<rowCount;i++){
            DefaultTableModel model=(DefaultTableModel)mainTbl.getModel();                    
            model.removeRow(0);   
        } 
                
    }//GEN-LAST:event_clearbtnActionPerformed

    private void availableSeatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availableSeatBtnActionPerformed
        // TODO add your handling code here:
        String Check = seatTxtField.getText();
        
        for(String s : seatlist){
        if(s.contains(Check)){
            JOptionPane.showMessageDialog(rootPane, "Sorry seat is already booked", "Information", JOptionPane.INFORMATION_MESSAGE);
        }else {
            JOptionPane.showMessageDialog(rootPane, "You can book the Seat", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        
        }
    }//GEN-LAST:event_availableSeatBtnActionPerformed

    /**
     *
     * Method to display current time to the user
     *
     */
    public void time() {
        Date date = new Date();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("HH:mm:ss");
        //formats the current date and time according to the given format
        currentTimeLbl.setText("Current Time: " + simpleDateFormat.format(date));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AirTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AirTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AirTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {

        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AirTicket().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel adminJPanel;
    public javax.swing.JPanel adminLblPnl;
    public javax.swing.JTable adminTable;
    private javax.swing.JTextField ageTxtField;
    private javax.swing.JLabel agelbl;
    private javax.swing.JComboBox<String> airlineComboBox;
    private javax.swing.JLabel airlinelbl;
    private javax.swing.JButton availableSeatBtn;
    private javax.swing.JButton bookBtn;
    private javax.swing.JLabel bpAirlinelbl;
    private javax.swing.JLabel bpClassdsplbl;
    private javax.swing.JLabel bpClasslbl;
    private javax.swing.JLabel bpFlightdetaildsplbl;
    private javax.swing.JLabel bpFlightdetaillbl;
    private javax.swing.JLabel bpFligtiddsplbl;
    private javax.swing.JLabel bpFrmdpylbl;
    private javax.swing.JLabel bpFromlbl;
    private javax.swing.JLabel bpNamedsplbl;
    private javax.swing.JLabel bpNamelbl;
    private javax.swing.JLabel bpPricedsplbl;
    private javax.swing.JLabel bpPricelbl;
    private javax.swing.JLabel bpSeatdsplbl;
    private javax.swing.JLabel bpTodsplbl;
    private javax.swing.JLabel bpTolbl;
    private javax.swing.JLabel bpdepdatedsplbl;
    private javax.swing.JLabel bpdepdatelbl;
    private javax.swing.JLabel bpflightidlbl;
    private javax.swing.JLabel bpseprator;
    private javax.swing.JLabel bptimedsplbl;
    private javax.swing.JLabel bptimeseatlbl;
    private javax.swing.ButtonGroup classBtnGroup;
    private javax.swing.JLabel classlbl;
    private javax.swing.JButton clearBtn1;
    private javax.swing.JButton clearbtn;
    private javax.swing.JLabel contactlbl;
    private java.awt.Label currentTimeLbl;
    private javax.swing.JTextField departureTxtField;
    private javax.swing.JLabel depdatelbl;
    private javax.swing.JRadioButton economyRadioBtn;
    private javax.swing.JLabel eiconlbl;
    private javax.swing.JPanel exitPnl;
    private javax.swing.JMenuItem exitmi;
    private javax.swing.JRadioButton femaleRadioBtn;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JRadioButton firstClassRadioBtn;
    private javax.swing.JLabel flightlbl;
    private javax.swing.JComboBox<String> fromComboBox;
    private javax.swing.JLabel fromlbl;
    private javax.swing.ButtonGroup genderBtnGroup;
    private javax.swing.JLabel genderlbl;
    private java.awt.Label greetingLbl;
    private javax.swing.JMenu helpMenu;
    public javax.swing.JLabel hiconlbl;
    private javax.swing.JButton infoBtn;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator11;
    public javax.swing.JPanel mainJPanel;
    public javax.swing.JTable mainTbl;
    private javax.swing.JRadioButton maleRadioBtn;
    private javax.swing.JTextField nameTxtField;
    private javax.swing.JLabel namelbl;
    private javax.swing.JRadioButton onewayRadioBtn;
    private javax.swing.JMenuItem openmi;
    private javax.swing.JTextField phonePinTxtField;
    private javax.swing.JTextField phoneTxtField;
    private javax.swing.JTextField priceTxtField;
    private javax.swing.JLabel pricelbl;
    private javax.swing.JButton searchBtn1;
    private javax.swing.JTextField searchTxtField;
    private javax.swing.JComboBox<String> searchcb;
    private javax.swing.JTable searchtbl;
    private javax.swing.JTextField seatTxtField;
    private javax.swing.JLabel seatlbl;
    private javax.swing.JLabel ticketlbl;
    public javax.swing.JPanel ticketsJPanel;
    public javax.swing.JPanel ticketsLabelPnl;
    private javax.swing.JLabel ticonlbl;
    private javax.swing.JComboBox<String> toComboBox;
    private javax.swing.JLabel tolbl;
    private javax.swing.ButtonGroup tripBtnGroup;
    private javax.swing.JRadioButton wholeTripRadioBtn;
    private javax.swing.JLabel yourSearchLbl;
    // End of variables declaration//GEN-END:variables
}
